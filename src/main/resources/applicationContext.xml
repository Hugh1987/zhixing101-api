<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">


<!-- 开启 SpringMVC注解扫描 -->
    <mvc:annotation-driven/>
    <!--&lt;!&ndash; spring 配置文件参数 载入 &ndash;&gt;-->
    <!--<context:property-placeholder location="classpath:props/api.properties"/>-->

    <!--<util:properties id="dataSourceProperties" location="classpath:props/dataSource.properties"/>-->
    <!--<util:properties id="apiProperties" location="classpath:props/api.properties"/>-->

    <!-- 加载项目 properties -->
    <!-- 加载配置文件 -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:props/api.properties</value>
                <value>classpath:props/dataSource.properties</value>
            </list>
        </property>
    </bean>
    

    <!-- 全工程开启Spring 注解扫描  -->
    <context:component-scan base-package="com.zhixing101.wechat.api.*">
    </context:component-scan>
    
    <!-- 开启log4j -->
    <bean id="log4jInitialization"
          class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="org.springframework.util.Log4jConfigurer"/>
        <property name="targetMethod" value="initLogging"/>
        <property name="arguments">
            <list>
                <value>classpath:props/log4j.properties</value>
            </list>
        </property>
    </bean>

    <!-- 配置spring 同步线程池(主要用于处理启动和关闭服务器时的任务) -->
    <bean id="synTaskExecutor" class="org.springframework.core.task.SyncTaskExecutor"/>
    <!-- 配置spring 异步线程池(主要用于处理数据上报的处理任务,一些定时任务等) -->
    <bean id="taskExecutor"
          class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 线程池维护线程的最少数量 -->
        <property name="corePoolSize" value="500"/>
        <!-- 线程池维护线程所允许的空闲时间 -->
        <property name="keepAliveSeconds" value="300"/>
        <!-- 线程池维护线程的最大数量 -->
        <property name="maxPoolSize" value="2000"/>
        <!-- 线程池所使用的缓冲队列 -->
        <property name="queueCapacity" value="2000"/>
        <!-- 线程池对拒绝任务(无线程可用)的处理策略 -->
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy"/>
        </property>
    </bean>




    <!-- 定时扫描 任务完成情况 -->
	<!--<import resource="applicationContext_task.xml" />-->

	<!--<import resource="applicationContext_aop.xml" />-->
    <import resource="applicationProvider.xml"/>
    <import resource="applicationContext_dataSource.xml"/>
</beans>
